## /etc/openvpn/server.conf

# https://www.lissyara.su/articles/freebsd/security/openvpn+auth/
# https://www.digitalocean.com/community/tutorials/openvpn-ubuntu-16-04-ru

  port 1194
  proto udp   # протокол
  dev tun     # тип устройства(tun/tap)

  tun-mtu 1500 # установка mtu в туннеле
  mssfix 1300  # параметр сегменторования пакетов

  ca /etc/openvpn/ca.crt  # корневой сертификат сервера
  cert /etc/openvpn/server.crt # просто сертификат сервера
  key /etc/openvpn/server.key # приватный ключ сервера
  dh /etc/openvpn/dh.pem # файл Диффи-Хелмана для защиты трафика от расшифровки
  # может быть ключ отзыва сертификатов

  server 172.16.0.0 255.255.255.0 # сеть
  route 172.16.2.0 255.255.255.0 # маршрут на целевую сеть, которая пропишется при поднятии тунельного интерфейса
  push "route 172.16.1.0 255.255.255.0" # позволяет передать маршрут на client'a который будет подключаться, можно пробрасывать DNS-адреса и другие опции

  client-config-dir /etc/openvpn/ccd # индивидуальный клиентский конфиг который мы можем выдавать, можно использовать для разных клиентов, директива начинается с имени клиента, также как необходимый файл в каталогe ./ccd/client со следующим содержанием, можно дописывать директивы push из основного конфига
  #   ifconfig-push 172.16.0.2 172.16.0.1
  #   iroute 172.16.2.0 255.255.255.0
  #   push "dhcp-option DNS 100.64.30.1"

  keepalive 10 120  # позволяет проверять состояние туннеля каждые 10, отвал после 120
  comp-lzo  #
  persist-key # эти два параметра позволяют сохранять все сформированные ключи и параметры при рестартах сервиса
  persist-tun # строкой выше
  status /var/log/openvpn/openvpn-status.log # статус-лог, подключенные клиенты и прочее
  log /var/log/openvpn/openvpn.log # логи
  verb 3  # уровни логирования(info,critical,debug и др.)

## Варианты параметров
# client-to-client
# push "redirect-gateway" # передает маршрут по умолчанию, где шлюз отправитель
# push "dhcp-option DNS 100.64.30.1" # передача адреса внутреннего DNS

## клиентам объявляется адрес шлюза, через который, при необходимости, они могут назначать маршруты
# push "route-gateway 10.8.0.1"

## задаем МАРШРУТ который передаём клиентту
## и маску подсети для того чтобы он "видел"
## сеть за опенвпн сервером (сеть 192.168.0.0/24)
# push "route 192.168.0.0 255.255.255.0"
# push "route 192.168.10.0 255.255.255.0"
# push "route 192.168.20.0 255.255.255.0"

# comp-lzo (сервер, клиент) - сжатие трафика
# status openvpn-status.log (сервер, клиент) - периодически сохранять информ. о текущем состоянии в указанный файл, это текстовый файл.
# log openvpn.log или log-append openvpn.log (сервер, клиент) - сохранять или добавлять лог в указанный файл
#keepalive 10 60 (сервер) - макрокоманда "пинговать" противоположную сторону туннеля с указанным периодом 10 сек, при отсутствии встречных пингов в течение 60 сек считать туннель упавшим и запускать пересоединение. Полезно также для поддержания статуса работающего udp-потока в транзитных NAT-шлюзах.
# Реально исполняется так (в скобках комментарии):
# Для mode server:
# ping 10 (сервер посылает OpenVPN-ping каждые 10 секунд. Не путать с ping в IP - здесь на OpenVPN-ping удалённая сторона не отвечает, поэтому эти пакеты надо отправлять с обеих сторон)
#ping-restart 120 (при отсутствии встречных пакетов, то есть от клиента, в течении 120 сек сервер перезапускает клиентскую сессию.

# в ipp.txt список адресов клиентов
